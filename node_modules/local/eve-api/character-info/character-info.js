'use strict';

var request = require('request'),
    q = require('q'),
    xml2js = require('xml2js');

var URL = "https://esi.evetech.net/latest/characters/";

var cache = {}

function get(characterId) {
    var res = getFromCache(characterId);
    if (res) {
        return q(res);
    }

    return requestFromServer(characterId).then(function (res) {
        putInCache(characterId, res);
        return res;
    });
}

function requestFromServer(characterId) {
    var deferred = q.defer();

    var url = URL + characterId;

    request.get(url, function (err, response, body) {
        if (err) {
            deferred.reject(err);
        }
        else {
			return responseToObj(characterId, response);
        }
    });

    return deferred.promise;
}

function responseToObj(id, data) {

    return {
        id: id,
        name: data.name,
        corporationId: Number(data.corporation_id),
        corporation: "",
        allianceId: data.alliance_id ? Number(data.alliance_id) : null,
        alliance: ""
    }
}

function getFromCache(query) {

    var item = cache[query];

    if (!item) return null;
    if (item.expires < Date.now()) return null;
    return item.data;
}

function putInCache(id, obj) {
    var expires = Date.now() + (1000 * 60 * 60);

    cache[id] = {
        expires: expires,
        data: obj
    }
}


module.exports = get;