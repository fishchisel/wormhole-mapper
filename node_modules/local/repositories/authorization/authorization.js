var imageServer = require('local/eve-api/image-server');
var moment = require('moment');

var Authorization = function (id, data) {
    if (!id) return;

    this.id = Number(id);
    this.name = data.name;
    this.type = data.type;
    this.lastModified = data.mod;
    this.note = data.note;
}
Authorization.prototype.clone = function () {
    var out = new Authorization();
    out.id = this.id;
    out.name = this.name;
    out.type = this.type;
    out.lastModified = this.lastModified;
    out.note = this.note;
    return out;
}

Authorization.prototype.getPortraitUrl = function (size) {
    return imageServer(this.id, this.type, size);
}
Authorization.prototype.getLastModifiedPretty = function () {
    if (!this.lastModified) return "-";
    return moment(this.lastModified).format("llll");
}
Authorization.prototype.getLastModifiedFuzzy = function () {
    if (!this.lastModified) return "-";
    return moment(this.lastModified).fromNow();
}

Authorization.SHORT_NOTE_LENGTH = 16;

Authorization.prototype.noteIsShort = function () {
    return this.note ? this.note.length <= Authorization.SHORT_NOTE_LENGTH : true;
}
Authorization.prototype.noteIsMedium = function () {
    return !this.noteIsShort() && this.note.length <= 140;
}
Authorization.prototype.noteIsTooLong = function () {
    return this.note ? this.note.length > 140 : false;
}
Authorization.prototype.getShortNote = function () {
    if (!this.note)
        return null;
    if (this.noteIsShort())
        return this.note;
    else
        return this.note.substring(0, Authorization.SHORT_NOTE_LENGTH) + "\u2026"; //ellipses
}

module.exports = Authorization;