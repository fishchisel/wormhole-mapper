'use strict';

var _sysRep;

var Bridge = function (key, args) {
	if (!key)
		return;

	this.id = key;

	this.homeSystemId = args.homeSystem;
	this.bridgeType = args.bridgeType;
	this.name = args.name;

	this.lastModified = args.lastModified;
};
Bridge.prototype.getBridgeRange = function () {
	if (this.bridgeType === "titan")
		return 6;
	if (this.bridgeType === "blackops")
		return 8;
	return 0;
}
Bridge.prototype.getBridgeTypePretty = function () {
	var val = Bridge.possibleBridgeTypes.find(function (t) {
		return this.bridgeType === t.key;
	}, this);

	if (val)
		return val.value;
}

Bridge.prototype.clone = function () {
	var cloned = new Bridge();
	cloned.id = this.id;
	cloned.homeSystemId = this.homeSystemId;
	cloned.bridgeType = this.bridgeType;
	cloned.name = this.name;
	return cloned;
}

var systemsInRange = {};

Bridge.prototype.getHomeSystem = function () {
    return _sysRep.getSystem(this.homeSystemId);
};

Bridge.prototype.getSystemsInRange = function () {
    if (systemsInRange[this.id] === undefined) {
        systemsInRange[this.id] = _sysRep
            .getSystemsWithinLightyears(this.getHomeSystem(), this.getBridgeRange());
    }
    return systemsInRange[this.id];
};

Bridge.attachRepositories = function (systemRepository) {
    _sysRep = systemRepository;
}

Bridge.possibleBridgeTypes = [
	{ key: 'titan', value: 'Titan' },
	{ key: 'blackops', value: 'Black Ops' }];


module.exports = Bridge;