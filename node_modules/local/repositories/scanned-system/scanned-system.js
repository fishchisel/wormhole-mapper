'use strict';

var moment = require('moment');

var ScannedSystem = function (system, args) {

	args = args ? args : {};

	var _lastPartialScan = args.lastPartialScan ? args.lastPartialScan : 0;

	var newObj = Object.create(system, {
		lastPartialScan: {
			get: function () { return Math.max(this.lastScanned, _lastPartialScan) },
			set: function (val) { _lastPartialScan = val }
		}
	});

	newObj.isPinned = args.isPinned;
	newObj.isStarred = args.isStarred;
	newObj.lastScanned = args.lastScanned ? args.lastScanned : 0;
	newObj.lastModified = args.lastModified;
	newObj.note = args.note;

	newObj.getLastScannedPretty = funcs.getLastScannedPretty;
	newObj.getLastScannedFuzzy = funcs.getLastScannedFuzzy
	newObj.getLastPartialScanPretty = funcs.getLastPartialScanPretty;
	newObj.getLastPartialScanFuzzy  = funcs.getLastPartialScanFuzzy;


	return newObj;
};

var funcs = {
	getLastScannedPretty: function () {
		if (this.lastScanned)
			return moment(this.lastScanned).format("llll");
		return "unrecorded";
	},
	getLastScannedFuzzy: function () {
		if (this.lastScanned)
			return moment(this.lastScanned).fromNow();
		return "-";
	},
	getLastPartialScanPretty: function () {
		if (this.lastPartialScan)
			return moment(this.lastPartialScan).format("llll");
		return "unrecorded";
	},
	getLastPartialScanFuzzy: function () {
		if (this.lastPartialScan)
			return moment(this.lastPartialScan).fromNow();
		return "-";
	}
}

ScannedSystem.MAX_NOTE_LENGTH = 280;

module.exports = ScannedSystem;